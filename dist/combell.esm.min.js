/**
 * MIT License
 *
 * Copyright (c) 2018 Bram Plessers
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import{createHmac}from"crypto";import axios from"axios";function randomString(t){let e="";const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let r=0;r<t;r+=1)e+=n.charAt(Math.floor(Math.random()*n.length));return e}function concat(t,e){return t.join(e)}function now(){return new Date}function epoch(){return Math.floor(now()/1e3)}function hmacify(t,e){return createHmac("sha256",e).update(t).digest("base64")}class Authorization{constructor(t,e){this.key=t,this.secret=e}getApiKey(){return this.key}getAPISecret(){return this.secret}getEpoch(){return epoch()}getNonce(){return randomString(32)}getHmacInputText(t){return concat(t,"")}options(t,e){return{headers:{Authorization:`hmac ${e}`,"Content-Type":"application/json"},url:t}}inputForHmac(t,e,n){const r=e.method,o=encodeURIComponent(e.path),c=this.getEpoch(),a=this.getNonce(),s=this.getAPISecret();return{text:this.getHmacInputText([t,r,o,c,a,n]),epoch:c,nonce:a,secret:s}}authorizationHeaderValue(t,e){const n=this.inputForHmac(t,e,null);return concat([t,hmacify(n.text,n.secret),n.nonce,n.epoch],":")}headers(t){const e=this.authorizationHeaderValue(this.getApiKey(),t);return this.options(t.url,e)}}const endpoints={ACCOUNTS:"/accounts"},baseUrl="https://api.combell.com",version=()=>"/v2",endpointify=(t,e)=>({method:t,path:"/v2"+e,url:baseUrl+"/v2"+e}),endpoint=t=>{switch(t){case endpoints.ACCOUNTS:return endpointify("get","/accounts");default:return endpointify("get","")}},contexts={general:{context:"general_error"},request_setup:{context:"request_setup_error"},no_response:{context:"no_response_received"},auth_authorization_header_invalid_format:{context:"authentication"},authorization_hmac_invalid:{context:"hmac_authorization_header_invalid"}},errorcontext=t=>{const{status:e}=t.response;switch(e){case 401:return contexts.auth_authorization_header_invalid_format.context}let n=t.response.data.error_code;return n&&(n=contexts[n])?n.context:contexts.general.context},errorhandler=t=>{if(t.response){const e=errorcontext(t);return new Error(e)}return t.request?new Error(contexts.no_response.context):new Error(contexts.general.context)};async function get(t,e){return axios.get(t,e).catch(t=>{throw errorhandler(t)})}async function index(t){const e=endpoint(endpoints.ACCOUNTS),n=t.headers(e);return get(e.url,n)}class Combell{constructor(t,e){this.key=t,this.secret=e}async errors(t){switch(t.message){case"authentication":break;default:throw t}}auth(){return new Authorization(this.key,this.secret)}async getAccounts(){try{return await index(this.auth())}catch(t){throw t}}}export default Combell;
